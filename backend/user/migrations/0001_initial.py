# Generated by Django 5.2.4 on 2025-08-04 11:50

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="FoodCalorieReference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "food_name",
                    models.CharField(help_text="食物名称", max_length=50, unique=True),
                ),
                (
                    "calories_per_100g",
                    models.PositiveIntegerField(help_text="每100g/ml的卡路里含量"),
                ),
                (
                    "food_category",
                    models.CharField(
                        choices=[
                            ("staple", "主食"),
                            ("vegetable", "蔬菜"),
                            ("fruit", "水果"),
                            ("meat", "肉类"),
                            ("dairy", "乳制品"),
                            ("beverage", "饮料"),
                            ("snack", "零食"),
                            ("other", "其他"),
                        ],
                        help_text="食物分类",
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True, help_text="食物描述")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "食物卡路里参考",
                "verbose_name_plural": "食物卡路里参考",
                "ordering": ["food_category", "food_name"],
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("userName", models.CharField(max_length=20, unique=True)),
                ("password", models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name="ExerciseRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("exercise_date", models.DateField(help_text="运动日期")),
                (
                    "exercise_type",
                    models.CharField(
                        choices=[
                            ("running", "跑步"),
                            ("swimming", "游泳"),
                            ("basketball", "篮球"),
                            ("football", "足球"),
                            ("tennis", "网球"),
                            ("badminton", "羽毛球"),
                            ("gym", "健身房"),
                            ("yoga", "瑜伽"),
                            ("cycling", "骑行"),
                            ("other", "其他"),
                        ],
                        help_text="运动类型",
                        max_length=20,
                    ),
                ),
                ("duration_minutes", models.PositiveIntegerField(help_text="运动时长（分钟）")),
                (
                    "calories_burned",
                    models.PositiveIntegerField(
                        blank=True, help_text="消耗卡路里", null=True
                    ),
                ),
                ("notes", models.TextField(blank=True, help_text="备注信息")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exercise_records",
                        to="user.user",
                    ),
                ),
            ],
            options={
                "ordering": ["-exercise_date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="DietRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("diet_date", models.DateField(help_text="饮食日期")),
                (
                    "meal_type",
                    models.CharField(
                        choices=[
                            ("breakfast", "早餐"),
                            ("lunch", "午餐"),
                            ("dinner", "晚餐"),
                            ("snack", "加餐"),
                        ],
                        help_text="餐次类型",
                        max_length=20,
                    ),
                ),
                ("food_name", models.CharField(help_text="食物名称", max_length=50)),
                ("portion_size", models.PositiveIntegerField(help_text="食物分量（克或毫升）")),
                (
                    "calories_per_100g",
                    models.PositiveIntegerField(help_text="每100g/ml卡路里"),
                ),
                (
                    "total_calories",
                    models.PositiveIntegerField(
                        blank=True, help_text="总卡路里", null=True
                    ),
                ),
                ("notes", models.TextField(blank=True, help_text="备注信息")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="diet_records",
                        to="user.user",
                    ),
                ),
            ],
            options={
                "verbose_name": "饮食记录",
                "verbose_name_plural": "饮食记录",
                "ordering": ["-diet_date", "meal_type", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SleepRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sleep_date", models.DateField(help_text="睡眠日期（以入睡日期为准）")),
                ("bedtime", models.TimeField(help_text="入睡时间")),
                ("wake_time", models.TimeField(help_text="起床时间")),
                (
                    "sleep_duration",
                    models.IntegerField(blank=True, help_text="睡眠时长（分钟）", null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sleep_records",
                        to="user.user",
                    ),
                ),
            ],
            options={
                "ordering": ["-sleep_date"],
                "unique_together": {("user", "sleep_date")},
            },
        ),
    ]
